syntax = "proto3";

package platformer;

message UserData {
    int32 user_identifier = 1;
    string name = 2;
}

message Command {
    // Actions being executed (To be animated, Clients change status to dead/alive, etc.)
    enum CommandType {
        DIED = 0;
        QUIT = 1;
        JOINED = 2;
        TAUNT = 3;
        ATTACK_LEFT = 4;
        ATTACK_RIGHT = 5;
        JUMP = 6;
    };

    CommandType command = 1;
}

message Position {
    // Payload
    float x = 3;
    float y = 4;

    float vel_x = 5;
    float vel_y = 6;
}

message ClientUpdate {
    oneof updatePayload {
        Command c = 1;
        Position p = 2;
    }
}

message ServerUpdate {
    int32 user_identifier = 1;

    oneof updatePayload {
        Command c = 2;
        Position p = 3;
    }
}

service GameServer {
    // Users stream in their position & command updates, and recieve the updates from other users
    rpc Connect(stream ClientUpdate) returns (stream ServerUpdate) {}

    // Get information about a user (Name, avatar, etc.)
    // Only the user_identifier need be filled in
    rpc UserInformation(UserData) returns (UserData) {}
}
